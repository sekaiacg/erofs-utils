include(CheckIncludeFile)
include(CheckFunctionExists)
include(CheckSymbolExists)
include(CheckStructHasMember)
include(CheckCXXCompilerFlag)

function(check_include include_list)
	foreach (inc ${${include_list}})
		string(REGEX REPLACE "[./]" "_" _inc ${inc})
		string(TOUPPER ${_inc} INC_UPPER)
		CHECK_INCLUDE_FILE(${inc} HAVE_${INC_UPPER})
		if (${INC_UPPER})
			#message("INC=HAVE_${INC_UPPER}")
		endif ()
	endforeach (inc)
endfunction()

function(check_fun func_list)
	foreach (func ${${func_list}})
		string(TOUPPER ${func} FUNC_UPPER)
		check_function_exists(${func} HAVE_${FUNC_UPPER})
		if (${HAVE_${FUNC_UPPER}})
			#message("FUNC=HAVE_${FUNC_UPPER}")
		endif ()
	endforeach (func)
endfunction(check_fun)

# Mangle the name of a compiler flag into a valid CMake identifier.
# Ex: --std=c++11 -> STD_EQ_CXX11
macro(mangle_name str output)
	string(STRIP "${str}" strippedStr)
	string(REGEX REPLACE "^/" "" strippedStr "${strippedStr}")
	string(REGEX REPLACE "^-+" "" strippedStr "${strippedStr}")
	string(REGEX REPLACE "-+$" "" strippedStr "${strippedStr}")
	string(REPLACE "-" "_" strippedStr "${strippedStr}")
	string(REPLACE "=" "_EQ_" strippedStr "${strippedStr}")
	string(REPLACE "+" "X" strippedStr "${strippedStr}")
	string(TOUPPER "${strippedStr}" ${output})
endmacro(mangle_name)

function(check_compile_flag_supported flag out)
	mangle_name("${flag}" flagname)
	check_cxx_compiler_flag("${flag}" "SUPPORTS_${flagname}_FLAG")
	if (SUPPORTS_${flagname}_FLAG)
		set(${out} 1 PARENT_SCOPE)
	else ()
		set(${out} PARENT_SCOPE)
	endif ()
endfunction(check_compile_flag_supported)