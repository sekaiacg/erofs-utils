name: Build erofs-utils
on:
  push:
    branches: [ "dev" ]
    tags: [ v* ]

jobs:
  Build-on-Ubuntu:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "50M"
      CCACHE_HARDLINK: "true"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: 1
    - name: Update system and install dependencies
      run: sudo apt update -y && sudo apt install llvm g++-multilib ninja-build -y
    - name: Install NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r25c
        local-cache: true
    - name: Set up ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}
        restore-keys: ${{ runner.os }}
    - name: Build erofs-utils
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      run: |
        chmod a+x build.sh
        ./build.sh
    - name: Prepare artifact
      if: success()
      id: prepareArtifact
      run: |
        androidArm64v8aName=`ls -d target/Android_arm64-v8a/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "androidArm64v8aName=$androidArm64v8aName" >> $GITHUB_OUTPUT
        androidArmeabiv7aName=`ls -d target/Android_armeabi-v7a/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "androidArmeabiv7aName=$androidArmeabiv7aName" >> $GITHUB_OUTPUT
        androidX86x64Name=`ls -d target/Android_x86_64/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "androidX86x64Name=$androidX86x64Name" >> $GITHUB_OUTPUT
        androidX86Name=`ls -d target/Android_x86/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "androidX86Name=$androidX86Name" >> $GITHUB_OUTPUT
        linuxX86x64Name=`ls -d target/Linux_x86_64/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "linuxX86x64Name=$linuxX86x64Name" >> $GITHUB_OUTPUT
    - name: Upload erofs-utils Android_arm64-v8a release
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepareArtifact.outputs.androidArm64v8aName }}
        path: './target/Android_arm64-v8a/${{ steps.prepareArtifact.outputs.androidArm64v8aName }}/*'
    - name: Upload erofs-utils Android_armeabi-v7a release
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepareArtifact.outputs.androidArmeabiv7aName }}
        path: './target/Android_armeabi-v7a/${{ steps.prepareArtifact.outputs.androidArmeabiv7aName }}/*'
    - name: Upload erofs-utils Android_x86_64 release
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepareArtifact.outputs.androidX86x64Name }}
        path: './target/Android_x86_64/${{ steps.prepareArtifact.outputs.androidX86x64Name }}/*'
    - name: Upload erofs-utils Android_x86 release
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepareArtifact.outputs.androidX86Name }}
        path: './target/Android_x86/${{ steps.prepareArtifact.outputs.androidX86Name }}/*'
    - name: Upload erofs-utils Linux_x86_64 release
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepareArtifact.outputs.linuxX86x64Name }}
        path: './target/Linux_x86_64/${{ steps.prepareArtifact.outputs.linuxX86x64Name }}/*'

  Build-on-macOS:
    runs-on: macos-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "50M"
      CCACHE_HARDLINK: "true"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: 1
    - name: Install dependencies
      run: brew install automake autoconf lz4 macfuse
    - name: Set up ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}
        restore-keys: ${{ runner.os }}
    - name: Build erofs-utils
      run: |
        mkdir out
        ./autogen.sh
        ./configure --enable-fuse --prefix=$(pwd)/out
        make
        make install
    - name: Prepare artifact
      if: success()
      id: prepareArtifact
      run: |
        darwinx86x64Name=`echo erofs-utils-v$(. scripts/get-version-number)-Darwin_x86_64-$(TZ=UTC-8 date +%y%m%d%H%M)` && echo "darwinx86x64Name=$darwinx86x64Name" >> $GITHUB_OUTPUT
    - name: Upload erofs-utils Darwin_x86_64 release
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepareArtifact.outputs.darwinx86x64Name }}
        path: 'out/bin/*'
