name: Build erofs-utils
on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:
    inputs:
      release:
        description: 'Push a new release'
        required: false
        default: 'false'
      version:
        description: 'Version'
        required: false
        default: 'v1.7-23092300'

jobs:
  release:
    needs: [ Build-on-Ubuntu, Build-on-macOS ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        if: github.event.inputs.release == 'true' && github.event.inputs.release != 'false' && !cancelled()

      - name: Version
        if: github.event.inputs.release == 'true' && github.event.inputs.release != 'false' && !cancelled()
        run: |
          ARTIFACT_DIR=$(ls); for name in ${ARTIFACT_DIR}; do chmod +x ${name}/*; touch -c -d "2009-01-01 00:00:00" ${name}/*; zip -9 -jy "${name}.zip" ${name}/*.erofs > /dev/null 2>&1; done;
          ls -lahR

      - name: Upload release
        if: github.event.inputs.release == 'true' && github.event.inputs.release != 'false' && !cancelled()
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          removeArtifacts: true
          token: ${{ secrets.ACCESS_TOKEN }}
          name: ${{ github.event.inputs.version }}
          tag: ${{ github.event.inputs.version }}
          body: This release is built by github-action.
          artifacts: "*.zip"

  Build-on-Ubuntu:
    runs-on: ubuntu-latest
    env:
      TZ: UTC-8
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "50M"
      CCACHE_HARDLINK: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Update system and install dependencies
        run: sudo apt update -y && sudo apt install llvm g++-multilib ninja-build -y

      - name: Install NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
          local-cache: true

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}
          restore-keys: ${{ runner.os }}

      - name: Build erofs-utils
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          chmod a+x build.sh
          ./build.sh

      - name: Prepare artifact
        if: success()
        id: Artifact
        run: |
          echo "androidArmv8aDir=target/Android_arm64-v8a" >> $GITHUB_OUTPUT
          androidArm64v8aName=`ls -d target/Android_arm64-v8a/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "androidArm64v8aName=$androidArm64v8aName" >> $GITHUB_OUTPUT

          echo "androidArmeabiv7Dir=target/Android_armeabi-v7a" >> $GITHUB_OUTPUT
          androidArmeabiv7aName=`ls -d target/Android_armeabi-v7a/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "androidArmeabiv7aName=$androidArmeabiv7aName" >> $GITHUB_OUTPUT

          echo "androidX86x64Dir=target/Android_x86_64" >> $GITHUB_OUTPUT
          androidX86x64Name=`ls -d target/Android_x86_64/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "androidX86x64Name=$androidX86x64Name" >> $GITHUB_OUTPUT

          echo "androidX86Dir=target/Android_x86" >> $GITHUB_OUTPUT
          androidX86Name=`ls -d target/Android_x86/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "androidX86Name=$androidX86Name" >> $GITHUB_OUTPUT

          echo "wslX86x64Dir=target/WSL_x86_64" >> $GITHUB_OUTPUT
          wslX86x64Name=`ls -d target/WSL_x86_64/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "wslX86x64Name=$wslX86x64Name" >> $GITHUB_OUTPUT

          echo "linuxX86x64Dir=target/Linux_x86_64" >> $GITHUB_OUTPUT
          linuxX86x64Name=`ls -d target/Linux_x86_64/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "linuxX86x64Name=$linuxX86x64Name" >> $GITHUB_OUTPUT

      - name: Upload erofs-utils Android_arm64-v8a
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.Artifact.outputs.androidArm64v8aName }}
          path: '${{ steps.Artifact.outputs.androidArmv8aDir }}/${{ steps.Artifact.outputs.androidArm64v8aName }}/*'

      - name: Upload erofs-utils Android_armeabi-v7a
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.Artifact.outputs.androidArmeabiv7aName }}
          path: '${{ steps.Artifact.outputs.androidArmeabiv7Dir }}/${{ steps.Artifact.outputs.androidArmeabiv7aName }}/*'

      - name: Upload erofs-utils Android_x86_64
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.Artifact.outputs.androidX86x64Name }}
          path: '${{ steps.Artifact.outputs.androidX86x64Dir }}/${{ steps.Artifact.outputs.androidX86x64Name }}/*'

      - name: Upload erofs-utils Android_x86
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.Artifact.outputs.androidX86Name }}
          path: '${{ steps.Artifact.outputs.androidX86Dir }}/${{ steps.Artifact.outputs.androidX86Name }}/*'

      - name: Upload erofs-utils WSL_x86_64
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.Artifact.outputs.wslX86x64Name }}
          path: '${{ steps.Artifact.outputs.wslX86x64Dir }}/${{ steps.Artifact.outputs.wslX86x64Name }}/*'

      - name: Upload erofs-utils Linux_x86_64
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.Artifact.outputs.linuxX86x64Name }}
          path: '${{ steps.Artifact.outputs.linuxX86x64Dir }}/${{ steps.Artifact.outputs.linuxX86x64Name }}/*'

  Build-on-macOS:
    runs-on: macos-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "50M"
      CCACHE_HARDLINK: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install dependencies
        run: brew install ccache ninja

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}
          restore-keys: ${{ runner.os }}

      - name: Build erofs-utils
        run: |
          chmod a+x build_darwin.sh
          ./build_darwin.sh

      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          echo "darwinX86x64Dir=target/Darwin_x86_64" >> $GITHUB_OUTPUT
          darwinX86x64Name=`ls -d target/Darwin_x86_64/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "darwinX86x64Name=$darwinX86x64Name" >> $GITHUB_OUTPUT

          echo "darwinAarch64Dir=target/Darwin_aarch64" >> $GITHUB_OUTPUT
          darwinAarch64Name=`ls -d target/Darwin_aarch64/erofs-utils-v*/ | awk -F '(/|.zip)' '{print $3}'` && echo "darwinAarch64Name=$darwinAarch64Name" >> $GITHUB_OUTPUT

      - name: Upload erofs-utils Darwin_x86_64
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.darwinX86x64Name }}
          path: '${{ steps.prepareArtifact.outputs.darwinX86x64Dir }}/${{ steps.prepareArtifact.outputs.darwinX86x64Name }}/*'

      - name: Upload erofs-utils Darwin_aarch64
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.darwinAarch64Name }}
          path: '${{ steps.prepareArtifact.outputs.darwinAarch64Dir }}/${{ steps.prepareArtifact.outputs.darwinAarch64Name }}/*'
